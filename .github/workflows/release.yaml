name: "Continuous Integration"

on:
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  mac-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-13
            arch: amd64
          - os: macos-latest
            arch: aarch64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'pnpm'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.86.0

      - name: Install tauri-cli from crates.io
        uses: baptiste0928/cargo-install@v3
        with:
          crate: tauri-cli
          version: ^2.0.0

      - name: Load Cached pnpm Store
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
          key: ${{ matrix.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-node-

      - name: Load Cached Cargo Artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.os }}-cargo-

      - name: Install frontend dependencies
        run: |
          pnpm install

      - name: Build Tauri App
        run: |
          sed -i -e 's/"version": "\(.*\)"/"version": "${{ github.ref_name }}"/' src-tauri/tauri.conf.json
          pnpm tauri build --verbose

      - name: Publish to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: src-tauri/target/release/bundle/dmg/SkyCtl_${{ github.ref_name }}_${{ matrix.arch }}.dmg
          asset_name: SkyCtl-${{ github.ref_name }}-${{ matrix.arch }}.dmg
          asset_content_type: application/x-apple-diskimage

  linux-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: amd64
          - os: ubuntu-22.04-arm
            arch: aarch64        

    container:
      image: ghcr.io/skyctl-space/devcontainer:25.05.0

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Load Cached pnpm Store
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
          key: ${{ matrix.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-node-

      - name: Load Cached Cargo Artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.os }}-cargo-

      - name: Install frontend dependencies
        run: |
          pnpm install

      - name: Build Tauri App
        run: |
          sed -i -e 's/"version": "\(.*\)"/"version": "${{ github.ref_name }}"/' src-tauri/tauri.conf.json
          pnpm tauri build --verbose

      - name: Publish to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: src-tauri/target/release/bundle/appimage/SkyCtl_${{ github.ref_name }}_${{ matrix.arch }}.AppImage
          asset_name: SkyCtl-${{ github.ref_name }}-${{ matrix.arch }}.AppImage
          asset_content_type: application/vnd.appimage

  windows-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            arch: x64
          - os: windows-11-arm
            arch: aarch64        


    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install pnpm 
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        if: ${{ matrix.arch == 'aarch64' }} # Runners for arm64 doesn't include rust by default
        with:
          toolchain: 1.86.0

      - name: Install tauri-cli from crates.io
        uses: baptiste0928/cargo-install@v3
        with:
          crate: tauri-cli
          version: ^2.0.0

      - name: Load Cached pnpm Store
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
          key: ${{ matrix.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-node-

      - name: Load Cached Cargo Artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.os }}-cargo-

      - name: Install frontend dependencies
        run: |
          pnpm install

      - name: Build Tauri App
        shell: pwsh
        run: |
          $file = 'src-tauri/tauri.conf.json'
          $ref = '${{ github.ref_name }}'
          (Get-Content $file -Raw) -replace '"version":\s*"(.*?)"', '"version": "' + $ref + '"' | Set-Content $file
          pnpm tauri build --verbose

      - name: Publish to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: src-tauri/target/release/bundle/nsis/SkyCtl_${{ github.ref_name }}_${{ matrix.arch }}-setup.exe
          asset_name: SkyCtl-${{ github.ref_name }}-${{ matrix.arch }}-setup.exe
          asset_content_type: application/x-msdownload

