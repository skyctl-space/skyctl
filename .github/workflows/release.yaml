name: "Continuous Integration"

on:
  release:
    types:
      - published

jobs:
  mac-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-13
            arch: amd64
          - os: macos-latest
            arch: aarch64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'pnpm'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.86.0

      - name: Install tauri-cli from crates.io
        uses: baptiste0928/cargo-install@v3
        with:
          crate: tauri-cli
          version: ^2.0.0

      - name: Load Cached pnpm Store
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
          key: ${{ matrix.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-node-

      - name: Load Cached Cargo Artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.os }}-cargo-

      - name: Install frontend dependencies
        run: |
          pnpm install

      - name: Update version in tauri.conf.json to match release name
        shell: bash
        run: |
          jq --arg ver "${{ github.ref_name }}" '.version = $ver' src-tauri/tauri.conf.json > tmp.json
          mv tmp.json src-tauri/tauri.conf.json

      - name: Build Tauri App
        run: |
          pnpm tauri build --verbose

      - name: Upload to Release (gh)
        run: |
          gh release upload "${{ github.ref_name }}" \
            "src-tauri/target/release/bundle/dmg/SkyCtl_${{ github.ref_name }}_${{ matrix.arch }}.dmg" \
            --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  linux-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: amd64
          - os: ubuntu-22.04-arm
            arch: aarch64        

    container:
      image: ghcr.io/skyctl-space/devcontainer:25.05.0

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Load Cached pnpm Store
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
          key: ${{ matrix.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-node-

      - name: Load Cached Cargo Artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.os }}-cargo-

      - name: Install frontend dependencies
        run: |
          pnpm install

      - name: Update version in tauri.conf.json to match release name
        shell: bash
        run: |
          sudo apt update && sudo apt install -y jq
          jq --arg ver "${{ github.ref_name }}" '.version = $ver' src-tauri/tauri.conf.json > tmp.json
          mv tmp.json src-tauri/tauri.conf.json

      - name: Build Tauri App
        run: |
          pnpm tauri build --verbose

      - name: Upload to Release (gh)
        run: |
          gh release upload "${{ github.ref_name }}" \
            "src-tauri/target/release/bundle/appimage/SkyCtl_${{ github.ref_name }}_${{ matrix.arch }}.AppImage" \
            --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  windows-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            arch: x64
          # Some node dependencies are not available for arm64 as of May 2025
          # - os: windows-11-arm
          #   arch: aarch64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install pnpm 
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        if: ${{ matrix.arch == 'aarch64' }} # Runners for arm64 doesn't include rust by default
        with:
          toolchain: 1.86.0

      - name: Install tauri-cli from crates.io
        uses: baptiste0928/cargo-install@v3
        with:
          crate: tauri-cli
          version: ^2.0.0

      - name: Load Cached pnpm Store
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
          key: ${{ matrix.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-node-

      - name: Load Cached Cargo Artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.os }}-cargo-

      - name: Install frontend dependencies
        run: |
          pnpm install

      - name: Update version in tauri.conf.json to match release name
        shell: bash
        run: |
          jq --arg ver "${{ github.ref_name }}" '.version = $ver' src-tauri/tauri.conf.json > tmp.json
          mv tmp.json src-tauri/tauri.conf.json

      - name: Build Tauri App
        run: |
          pnpm tauri build --verbose

      - name: Upload to Release (gh)
        run: |
          gh release upload "${{ github.ref_name }}" \
            "src-tauri/target/release/bundle/nsis/SkyCtl_${{ github.ref_name }}_${{ matrix.arch }}-setup.exe" \
            --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
